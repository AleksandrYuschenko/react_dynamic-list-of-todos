{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodoId","onSelectTodo","className","map","todo","id","completed","classNames","title","toString","type","value","onClick","TodoFilter","query","onApplyQuery","filter","onFilter","onChange","event","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","useState","user","setUser","useEffect","userId","find","selectedToDo","href","email","name","App","setTodos","setSelectedTodoId","filterBy","setFilterBy","setQuery","selectId","filteredTodos","visibleTodos","useMemo","toLocaleLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b34d8ff3.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[]\n  selectedTodoId: string\n  onSelectTodo: (selectId: number) => void\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodoId,\n  onSelectTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr data-cy=\"todo\" className=\"\">\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={classNames(\n              'has-text-success',\n              { 'has-text-danger': todo.completed === false },\n            )}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            {!(todo.id.toString() === selectedTodoId) && (\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                value={selectedTodoId}\n                onClick={() => onSelectTodo(todo.id)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames(\n                    'far fa-eye',\n                    { 'fa-eye-slash': selectedTodoId !== '' },\n                  )}\n                  />\n                </span>\n              </button>\n            )}\n          </td>\n        </tr>\n      ))}\n\n    </tbody>\n  </table>\n);\n","import React from 'react';\n\ntype Props = {\n  query: string\n  onApplyQuery: React.Dispatch<React.SetStateAction<string>>\n  filter: string\n  onFilter: (filter: string) => void\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  onApplyQuery,\n  filter,\n  onFilter,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={filter}\n          onChange={(event) => onFilter(event.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => onApplyQuery(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            value={query}\n            onClick={() => onApplyQuery('')}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todos: Todo[]\n  selectedTodoId: string\n  onSelectTodo: (selectId: number) => void\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todos,\n  selectedTodoId,\n  onSelectTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  // const findId = todos.find(todo => todo.id === +selectedTodoId)?.userId;\n\n  useEffect(() => {\n    getUser(todos.find(todo => todo.id\n      .toString() === selectedTodoId)?.userId || 0).then(setUser);\n  }, []);\n\n  const selectedToDo = todos\n    .find(todo => todo.id\n      .toString() === selectedTodoId);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedToDo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              value={selectedTodoId}\n              onClick={() => onSelectTodo(0)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedToDo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedToDo?.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodoId, setSelectedTodoId] = useState('');\n  const [filterBy, setFilterBy] = useState('all');\n  const [query, setQuery] = useState('');\n\n  const onSelectTodo = (selectId: number) => {\n    setSelectedTodoId(todos.find(todo => todo.id === selectId)?.id.toString() || '');\n  };\n\n  useEffect(() => {\n    getTodos().then(setTodos);\n  }, []);\n\n  let filteredTodos = [...todos];\n\n  if (filterBy === 'active') {\n    filteredTodos = [...todos].filter(todo => todo.completed === false);\n  } else if (filterBy === 'completed') {\n    filteredTodos = [...todos].filter(todo => todo.completed === true);\n  }\n\n  const visibleTodos = useMemo(() => {\n    return filteredTodos.filter(todo => todo.title.toLocaleLowerCase().includes(query.toLocaleLowerCase()));\n  }, [filteredTodos, query]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                onApplyQuery={setQuery}\n                filter={filterBy}\n                onFilter={setFilterBy}\n              />\n            </div>\n\n            <div className=\"block\">\n              <TodoList\n                todos={visibleTodos}\n                selectedTodoId={selectedTodoId}\n                onSelectTodo={onSelectTodo}\n              />\n              {!todos.length && <Loader />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodoId && (\n        <TodoModal\n          todos={todos}\n          selectedTodoId={selectedTodoId}\n          onSelectTodo={onSelectTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}